// Code generated by cdpgen. DO NOT EDIT.

package webaudio

import (
	"github.com/mafredri/cdp/rpcc"
)

// ContextCreatedClient is a client for ContextCreated events. Notifies that a
// new BaseAudioContext has been created.
type ContextCreatedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*ContextCreatedReply, error)
	rpcc.Stream
}

// ContextCreatedReply is the reply for ContextCreated events.
type ContextCreatedReply struct {
	Context BaseAudioContext `json:"context"` // No description.
}

// ContextDestroyedClient is a client for ContextDestroyed events. Notifies
// that existing BaseAudioContext has been destroyed.
type ContextDestroyedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*ContextDestroyedReply, error)
	rpcc.Stream
}

// ContextDestroyedReply is the reply for ContextDestroyed events.
type ContextDestroyedReply struct {
	ContextID ContextID `json:"contextId"` // No description.
}

// ContextChangedClient is a client for ContextChanged events. Notifies that
// existing BaseAudioContext has changed some properties (id stays the same)..
type ContextChangedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*ContextChangedReply, error)
	rpcc.Stream
}

// ContextChangedReply is the reply for ContextChanged events.
type ContextChangedReply struct {
	Context BaseAudioContext `json:"context"` // No description.
}
